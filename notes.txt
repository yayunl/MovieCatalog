--------------------
- Deploy to Heroku -
--------------------

###########################
#
#   Build images for Heroku
#
###########################

1. Build web production image
    * Heroku registry:
        (Recommended) docker-compose -f _build_web_prod_image.yml build
        (Not recommended)  docker build -f compose/Dockerfile.prod -t registry.heroku.com/ancient-temple-48054/web ./app

    * GitHub registry:
        (Recommended) docker-compose -f _build_web_prod_image.yml build
        (Not recommended) docker build -f compose/Dockerfile.prod -t docker.pkg.github.com/yayunl/moviecatalog/web:latest ./app


2. Build nginx production image
    * Heroku registry:
        (Recommended) docker-compose -f _build_nginx_prod_image.yml build
        (Not recommended) docker build -f nginx/Dockerfile -t registry.heroku.com/ancient-temple-48054/nginx ./nginx

    * GitHub registry:
        (Recommended) docker-compose -f _build_nginx_prod_image.yml build
        (Not recommended) docker build -f nginx/Dockerfile -t docker.pkg.github.com/yayunl/moviecatalog/nginx:latest ./nginx


##########################
#
# Push images to registry
#
##########################

# Push images to Heroku registry
Step 1 - Login to Heroku
    * heroku login

Step 2 - Push images
    1. Push web image to Heroku registry
    * docker push registry.heroku.com/ancient-temple-48054/web:latest

    2. Push nginx image
    * docker push registry.heroku.com/ancient-temple-48054/moviecatalog-nginx:latest


# Push images to GitHub registry
Step 1 - Login to github package repository
     * docker login docker.pkg.github.com -u yayunl -p Personal_Token_API

Step 2 - Push packages to GitHub registry
    1. Push web package:
    * docker push docker.pkg.github.com/yayunl/moviecatalog/web:latest

    2. Push nginx image:
    * docker push docker.pkg.github.com/yayunl/moviecatalog/moviecatalog-nginx:latest
